dfNulls <- cbind(dfReplaceNulls, dfResponse)
head(dfNulls)
# By Diabetes
dfNulls_long <- gather(dfNulls, variable, value, -diabetes)
qplot(diabetes, variable, data = dfNulls_long, geom = "tile",
fill = is.na(value)) +
scale_fill_manual("missing?",
values = c(`TRUE` = "black", `FALSE` = "white")) +
theme(axis.text.x = element_text(angle = 0))
apply(colnames(dfNulls),2, count)
library(faraway)
?pima
df <- pima
#df[ == 0] <- NA
dfResponse <- df[, c('pregnant', 'diabetes', 'test')]
dfReplaceNulls <-  df[, c('diastolic', 'glucose', 'triceps', 'insulin',  'bmi')]
dfReplaceNulls[dfReplaceNulls == 0] <- NA
dfNulls <- cbind(dfReplaceNulls, dfResponse)
head(dfNulls)
# By Diabetes
dfNulls_long <- gather(dfNulls, variable, value, -diabetes)
qplot(diabetes, variable, data = dfNulls_long, geom = "tile",
fill = is.na(value)) +
scale_fill_manual("missing?",
values = c(`TRUE` = "black", `FALSE` = "white")) +
theme(axis.text.x = element_text(angle = 0))
apply(colnames(dfNulls), count)
library(faraway)
?pima
df <- pima
#df[ == 0] <- NA
dfResponse <- df[, c('pregnant', 'diabetes', 'test')]
dfReplaceNulls <-  df[, c('diastolic', 'glucose', 'triceps', 'insulin',  'bmi')]
dfReplaceNulls[dfReplaceNulls == 0] <- NA
dfNulls <- cbind(dfReplaceNulls, dfResponse)
head(dfNulls)
# By Diabetes
dfNulls_long <- gather(dfNulls, variable, value, -diabetes)
qplot(diabetes, variable, data = dfNulls_long, geom = "tile",
fill = is.na(value)) +
scale_fill_manual("missing?",
values = c(`TRUE` = "black", `FALSE` = "white")) +
theme(axis.text.x = element_text(angle = 0))
sum(is.na(dfNulls))
library(faraway)
?pima
df <- pima
#df[ == 0] <- NA
dfResponse <- df[, c('pregnant', 'diabetes', 'test')]
dfReplaceNulls <-  df[, c('diastolic', 'glucose', 'triceps', 'insulin',  'bmi')]
dfReplaceNulls[dfReplaceNulls == 0] <- NA
dfNulls <- cbind(dfReplaceNulls, dfResponse)
head(dfNulls)
# By Diabetes
dfNulls_long <- gather(dfNulls, variable, value, -diabetes)
qplot(diabetes, variable, data = dfNulls_long, geom = "tile",
fill = is.na(value)) +
scale_fill_manual("missing?",
values = c(`TRUE` = "black", `FALSE` = "white")) +
theme(axis.text.x = element_text(angle = 0))
sapply(dfNulls, function(x), sum(is.na(x))
library(faraway)
?pima
df <- pima
#df[ == 0] <- NA
dfResponse <- df[, c('pregnant', 'diabetes', 'test')]
dfReplaceNulls <-  df[, c('diastolic', 'glucose', 'triceps', 'insulin',  'bmi')]
dfReplaceNulls[dfReplaceNulls == 0] <- NA
dfNulls <- cbind(dfReplaceNulls, dfResponse)
head(dfNulls)
# By Diabetes
dfNulls_long <- gather(dfNulls, variable, value, -diabetes)
qplot(diabetes, variable, data = dfNulls_long, geom = "tile",
fill = is.na(value)) +
scale_fill_manual("missing?",
values = c(`TRUE` = "black", `FALSE` = "white")) +
theme(axis.text.x = element_text(angle = 0))
sapply(dfNulls, function(x) sum(is.na(x))
library(faraway)
?pima
df <- pima
#df[ == 0] <- NA
dfResponse <- df[, c('pregnant', 'diabetes', 'test')]
dfReplaceNulls <-  df[, c('diastolic', 'glucose', 'triceps', 'insulin',  'bmi')]
dfReplaceNulls[dfReplaceNulls == 0] <- NA
dfNulls <- cbind(dfReplaceNulls, dfResponse)
head(dfNulls)
# By Diabetes
dfNulls_long <- gather(dfNulls, variable, value, -diabetes)
qplot(diabetes, variable, data = dfNulls_long, geom = "tile",
fill = is.na(value)) +
scale_fill_manual("missing?",
values = c(`TRUE` = "black", `FALSE` = "white")) +
theme(axis.text.x = element_text(angle = 0))
sapply(dfNulls, function(x) sum(is.na(x)))
35+5+227+374+11
fit <- lm(diastolic ~ . , data = dfNulls)
fit <- lm(diastolic ~ . , data = dfNulls)
summary(fit)
fit <- lm(diastolic ~ . , data = dfNulls)
summary(fit)
#n.imp <- 25 # Set the number of imputed datasets
#chimp <- amelia(chmiss, m=n.imp, p2s=0)
dfMeanImputation <- dfNulls
dfMeanImputation[is.na(dfMeanImputation)] <- mean(dfNulls, na.rm = TRUE)
dfMeanImputation <- dfNulls
dfMeanImputation[is.na(dfMeanImputation)] <- mean(dfNulls, na.rm = TRUE)
dfMeanImputation <- dfNulls
dfMeanImputation[is.na(dfMeanImputation)] <- mean(dfNulls, na.rm = TRUE)
head(dfMeanImputation)
dfMeanImputation <- dfNulls
dfMeanImputation[is.na(dfMeanImputation)] <- mean(dfNulls, na.rm = TRUE)
head(dfMeanImputation)
mean(dfNulls,na.rm = TRUE)
dfMeanImputation <- dfNulls
dfMeanImputation[is.na(dfMeanImputation)] <- mean(dfNulls, na.rm = TRUE)
head(dfMeanImputation)
mean(dfMeanImputation, na.rm = TRUE)
dfMeanImputation <- dfNulls
dfMeanImputation[is.na(dfMeanImputation)] <- mean(dfNulls, na.rm = TRUE)
head(dfMeanImputation)
mean(dfMeanImputation, na.rm = FALSE)
library(Amelia)
library(broom)
library(faraway)
library(ggplot2)
library(tidyverse)
x_mean_imputed[is.na(x_mean_imputed)] <- mean(x_miss, na.rm = TRUE)
library(Amelia)
library(broom)
library(faraway)
library(ggplot2)
library(tidyverse)
x <- c(NA, 1, 3, 5, -99)
x + 1
x < 1
x == NA
is.na(x)
x[!is.na(x)]
x[x == -99] <- NA
x
sum(x)
mean(x)
sd(x)
mean(x, na.rm = TRUE)
df <- data.frame(x = x, y = rnorm(5), obs = 1:5)
fit <- lm(y ~ x, data = df)
summary(fit)
augment(fit, data = df)
dfMeanImputation <- dfNulls
dfMeanImputation[is.na(dfMeanImputation)] <- mean(dfNulls, na.rm = TRUE)
head(dfMeanImputation)
mean(dfMeanImputation, na.rm = TRUE)
dfNulls
dfMeanImputation <- dfNulls
dfMeanImputation[is.na(dfMeanImputation)] <- mean(dfNulls, na.rm = TRUE)
head(dfMeanImputation)
mean(dfMeanImputation, na.rm = TRUE)
mean(dfNulls,na.rm = TRUE)
mean(dfNulls,na.rm = TRUE)
dfMeanImputation <- dfNulls
dfMeanImputation[is.na(dfMeanImputation)] <- mean(dfNulls, na.rm = TRUE)
head(dfMeanImputation)
mean(dfMeanImputation, na.rm = TRUE)
mean(dfMeanImputation, na.rm = TRUE)
mean(dfMeanImputation)
mean(dfMeanImputation, na.rm = T)
mean(dfMeanImputation, na.rm = F)
x_miss[sample(n, size = 2)] <- NA
library(Amelia)
library(broom)
library(faraway)
library(ggplot2)
library(tidyverse)
x <- c(NA, 1, 3, 5, -99)
x + 1
x < 1
x == NA
is.na(x)
x[!is.na(x)]
x[x == -99] <- NA
x
sum(x)
mean(x)
sd(x)
mean(x, na.rm = TRUE)
df <- data.frame(x = x, y = rnorm(5), obs = 1:5)
fit <- lm(y ~ x, data = df)
summary(fit)
augment(fit, data = df)
mean(x_miss, na.rm = TRUE)
library(Amelia)
library(broom)
library(faraway)
library(ggplot2)
library(tidyverse)
x <- c(NA, 1, 3, 5, -99)
x + 1
x < 1
x == NA
is.na(x)
x[!is.na(x)]
x[x == -99] <- NA
x
sum(x)
mean(x)
sd(x)
mean(x, na.rm = TRUE)
df <- data.frame(x = x, y = rnorm(5), obs = 1:5)
fit <- lm(y ~ x, data = df)
summary(fit)
augment(fit, data = df)
x_miss[sample(n, size = 2)] <- NA
augment(fit, data = df)
n <- 10
x_miss <- rnorm(n)
x_miss[sample(n, size = 2)] <- NA
x_miss
mean(x_miss)
mean(x_miss, na.rm = TRUE)
x_mean_imputed <- x_miss
x_mean_imputed[is.na(x_mean_imputed)] <- mean(x_miss, na.rm = TRUE)
x_mean_imputed
mean(x_miss, na.rm = TRUE)
mean(x_mean_imputed)
colMeans(dfMeanImputation)
colMeans(dfMeanImputation, na.rm = T)
dfMeanImputation <- dfNulls
dfMeanImputation[is.na(dfMeanImputation)] <- colMeans(dfMeanImputation, na.rm = T)
dfMeanImputation <- dfNulls
dfMeans <- colMeans(dfMeanImputation, na.rm = T)
names <- colnames(dfMeanImputation)
for (e in names){
print(e)
}
#dfMeanImputation[is.na(dfMeanImputation['glucose'])] <- mean(dfMeans, na.rm = TRUE)
#head(dfMeanImputation)
#mean(dfMeanImputation, na.rm = TRUE)
dfMeanImputation <- dfNulls
dfMeans <- colMeans(dfMeanImputation, na.rm = T)
names <- colnames(dfMeanImputation)
i <- 1
for (e in names){
dfMeanImputation[is.na(dfMeanImputation[e])] <- mean(dfMeans[i], na.rm = TRUE)
i += 1
dfMeanImputation <- dfNulls
dfMeans <- colMeans(dfMeanImputation, na.rm = T)
names <- colnames(dfMeanImputation)
i <- 1
for (e in names){
dfMeanImputation[is.na(dfMeanImputation[e])] <- mean(dfMeans[i], na.rm = TRUE)
i <- i + 1
}
dfMeanImputation <- dfNulls
dfMeans <- colMeans(dfMeanImputation, na.rm = T)
names <- colnames(dfMeanImputation)
i <- 1
#for (e in names){
dfMeanImputation[is.na(dfMeanImputation['glucose'])] <- mean(dfMeans[1], na.rm = TRUE)
dfMeanImputation[is.na(dfMeanImputation['glucose'])] <- mean(dfMeans[1], na.rm = TRUE)
#mean(dfMeanImputation, na.rm = TRUE)
dfMeanImputation[is.na(dfMeanImputation['glucose'])]
View(dfMeanImputation)
#mean(dfMeanImputation, na.rm = TRUE)
is.na(dfMeanImputation['glucose'])
#mean(dfMeanImputation, na.rm = TRUE)
dfMeanImputation['glucose'][is.na(dfMeanImputation['glucose'])]
dfMeanImputation['glucose'][is.na(dfMeanImputation['glucose'])] <- mean(dfMeans[1], na.rm = TRUE)
View(dfMeanImputation)
dfMeanImputation <- dfNulls
dfMeans <- colMeans(dfMeanImputation, na.rm = T)
names <- colnames(dfMeanImputation)
i <- 1
for (e in names){
dfMeanImputation[e][is.na(dfMeanImputation[e])] <- mean(dfMeans[i], na.rm = TRUE)
i <- i + 1
}
#dfMeanImputation[is.na(dfMeanImputation['glucose'])] <- mean(dfMeans, na.rm = TRUE)
#head(dfMeanImputation)
#mean(dfMeanImputation, na.rm = TRUE)
View(dfMeanImputation)
#copy df
dfMeanImputation <- dfNulls
#get col means / names
dfMeans <- colMeans(dfMeanImputation, na.rm = T)
names <- colnames(dfMeanImputation)
# replace nulls with column means
i <- 1
for (e in names){
dfMeanImputation[e][is.na(dfMeanImputation[e])] <- mean(dfMeans[i], na.rm = TRUE)
i <- i + 1
}
# REFIT MODEL
fitMeanImputation <- lm(diastolic ~ . , data = dfMeanImputation)
summary(fitMeanImputation)
set.seed(123)
n.imp <- 25 # Set the number of imputed datasets
chimp <- amelia(dfNulls, m=n.imp, p2s=0)
betas <- matrix(0, nrow=n.imp, ncol=8)
ses <- matrix(0, nrow=n.imp, ncol=8)
for(i in 1:n.imp){
newMod <- lm(diastolic ~ . , data=chimp$imputations[[i]])
betas[i,] <- coef(newMod)
ses[i,] <- coef(summary(newMod))[,2]
}
mi.meld(q=betas, se=ses)
View(betas)
knitr::opts_chunk$set(echo = TRUE)
library(broom)
library(ggplot2)
library(nlme)
Resin <- read.csv("Resin.csv")
Resin_group <- groupedData(yield ~ as.factor(strength) | tree, data=Resin,
order.groups=FALSE)
head(Resin_group)
Resin_group
plot(Resin_group)
plot(Resin_group, legend = 'sf')
plot(Resin_group, legend = T)
plot(Resin_group, legend )
plot(Resin_group)
lmeFit <- lme(yield ~ factor(strength) + random = ~ 1 | tree)
lmeFit <- lme(yield ~ factor(strength) , data = Resin_group, random = ~ 1 | tree)
summmary(lmeFit)
summary(lmeFit)
library(broom)
library(ggplot2)
library(nlme)
knitr::opts_chunk$set(echo = TRUE, exercise.eval = FALSE, warning = FALSE)
machine_noint <- lme(score ~ Machine, data = Machines, random = ~ 1 | Worker)
summary(machine_noint)
intervals(lmeFit)
lmeFit <- lme(yield ~ as.factor(strength) , data = Resin_group, random = ~ 1 | tree)
summary(lmeFit)
knitr::opts_chunk$set(echo = TRUE)
library(nlme)
?ergoStool
ergoStool
plot(ergoStool)
fit <- lm(effort <- . , data = ergStool)
fit <- lm(effort ~ . , data = ergStool)
fit <- lm(effort ~ . , data = ergoStool)
fit <- lm(effort ~ . , data = ergoStool)
summary(fit)
fit <- lm(effort ~ . , data = ergoStool)
summary(fit)
confint(fit)
lmeFit <- lme(effort ~ factor(Type), random = 1 ~ | Subject)
lmeFit <- lme(effort ~ factor(Type), random = ~ 1  | Subject)
lmeFit <- lme(effort ~ factor(Type), random = ~ 1  | Subject, data = ergoStool)
summary(lmeFit)
qplot(Subject, effort, data = ergoStool, colour = Type)
lmeFit.e <- lme(effort ~ 1, random = ~1 | Subject, data = ergoStool)
lmeFit.e <- lme(effort ~ 1, random = ~1 | Subject, data = ergoStool)
summary(lmeFit.e)
lmeFit.e <- lm(effort ~ 1, data = ergoStool)
summary(lmeFit.e)
fit <- lm(effort ~ . -1 , data = ergoStool)
summary(fit)
confint(fit)
fit <- lm(effort ~ . , data = ergoStool)
summary(fit)
confint(fit)
fit <- lm(effort ~ .-1 , data = ergoStool)
summary(fit)
confint(fit)
qplot(Subject, effort, data = ergoStool, colour = Type)
plot(intervals(ergoStool))
qplot(Subject, effort, data = ergoStool, colour = Type)
plot(intervals(ergoStool.lis))
fit <- lm(effort ~ .-1 , data = ergoStool)
summary(fit)
confint(fit)
plot(confint(fit))
fit <- lm(effort ~ .-1 , data = ergoStool)
summary(fit)
confint(fit)
plot(intervals(fit))
library(nlme)
?ergoStool
ergoStool
qplot(Subject, effort, data = ergoStool, colour = Type)
fit <- lm(effort ~ .-1 , data = ergoStool)
summary(fit)
confint(fit)
fit <- lm(effort ~ . , data = ergoStool)
summary(fit)
confint(fit)
fit <- lm(effort ~ .-1 , data = ergoStool)
summary(fit)
confint(fit)
qplot(Subject, type, data = ergoStool, colour = subject)
qplot(Subject, Type, data = ergoStool, colour = Subject)
qplot(Subject, Type, data = ergoStool, colour = effort)
qplot(Type, effort, data = ergoStool, colour = Subject)
options(contrasts = rep ("contr.treatment", 2))
fit <- lm(effort ~ .-1 , data = ergoStool)
summary(fit)
confint(fit)
options(contrasts = rep ("contr.treatment", 2))
fit <- lm(effort ~ . , data = ergoStool)
summary(fit)
confint(fit)
lmeFit <- lme(effort ~ factor(Type), random = ~ 1  | Subject, data = ergoStool)
summary(lmeFit)
lmeFit <- lme(effort ~ factor(Type), random = ~ 1  | Subject, data = ergoStool)
summary(lmeFit)
anova(lmeFit, lmeFit.e)
confint(lmeFit)
interval(lmeFit)
intervals(lmeFit)
conf <- predict(lmeFit, interval = 'confidence')
predict(lmeFit, interval = 'confidence')
conf <- predict(fit, interval = 'confidence')
conf <- predict(fit, interval = 'confidence')
conf
knitr::opts_chunk$set(echo = TRUE)
library(nlme)
?ergoStool
ergoStool
qplot(Type, effort, data = ergoStool, colour = Subject)
options(contrasts = rep ("contr.treatment", 2))
fit <- lm(effort ~ . , data = ergoStool)
summary(fit)
confint(fit)
lmeFit <- lme(effort ~ factor(Type), random = ~ 1  | Subject, data = ergoStool)
summary(lmeFit)
lmeFit.e <- lm(effort ~ 1, data = ergoStool)
summary(lmeFit.e)
anova(lmeFit, lmeFit.e)
intervals(lmeFit)
conf <- predict(fit, interval = 'confidence')
conf
fit[Type = T1]
fit[Type == 'T1']
fit[fit$Type == 'T1']
fit[fit$Type == T1]
conf <- predict(lmeFit, interval = 'confidence')
conf
conf[1]
conf[1:4]
conf <- predict(lmeFit, interval = 'confidence')
#conf[1:4]
conf <- predict(lmeFit, interval = 'confidence')
#conf[1:4]
conf
conf <- predict(lmeFit, interval = 'confidence')
conf[1:4]
conf <- predict(lmeFit, interval = 'confidence')
avg(conf[1:4])
conf <- predict(lmeFit, interval = 'confidence')
mean(conf[1:4])
sd(conf[1:4])
lmeFit <- lme(yield ~ as.factor(strength) , data = Resin_group, random = ~ 1 | tree)
summary(lmeFit)
#options(contrasts = rep ("contr.treatment", 2))
fit <- lm(effort ~ . , data = ergoStool)
summary(fit)
confint(fit)
options(contrasts = rep ("contr.treatment", 2))
fit <- lm(effort ~ . , data = ergoStool)
summary(fit)
confint(fit)
options(contrasts = rep ("contr.treatment", 2))
fit <- lm(effort ~ .-1 , data = ergoStool)
summary(fit)
confint(fit)
options(contrasts = rep ("contr.treatment", 2))
fit <- lm(effort ~ . , data = ergoStool)
summary(fit)
confint(fit)
lmeFit <- lme(effort ~ factor(Type), random = ~ 1  | Subject, data = ergoStool)
summary(lmeFit)
x <- mean(c(3.889, 2.22, 0.66))
x
x/24
x/sqrt(24)
x <- mean(c(3.889, 2.22, 0.66, 8.556))
x/sqrt(24)
lmeFit.e <- lme(effort ~ 1, data = ergoStool)
lmeFit.e <- lme(effort ~ 1, data = ergoStool)
lmeFit.e <- lme(effort ~ 1, , random = ~ 1 | factor(Subject) data = ergoStool)
lmeFit.e <- lme(effort ~ 1,  random = ~ 1 | factor(Subject) data = ergoStool)
lmeFit.e <- lme(effort ~ 1,  random = ~ 1 | factor(Subject) ,data = ergoStool)
lmeFit.e <- lme(effort ~ 1,  random = ~ 1 | factor(Subject) ,data = ergoStool)
summary(lmeFit.e)
anova(lmeFit, lmeFit.e)
lmeFit.e <- lme(effort ~ 1,  random = ~ 1 | factor(Subject) ,data = ergoStool)
summary(lmeFit.e)
anova(lmeFit, lmeFit.e)
lmeFit <- lme(effort ~ factor(Type), random = ~ 1  | Subject, data = ergoStool, method = "ML")
lmeFit.e <- lme(effort ~ 1,  random = ~ 1 | factor(Subject) ,data = ergoStool, method = "ML")
anova(lmeFit, lmeFit.e)
conf <- predict(lmeFit, interval = 'confidence')
mean(conf[1:4])
sd(conf[1:4])
conf <- predict(lmeFit, interval = 'confidence')
mean(conf[1:4])
sd(conf[1:4])
conf
conf <- predict(lmeFit, interval = 'confidence')
mean(conf[1:4])
sd(conf[1:4])
df <- data.frame(response = rnorm(10),
treatment = rep(letters[1:5], 2))
)
df <- data.frame(response = rnorm(10),
treatment = rep(letters[1:5], 2)))
df <- data.frame(response = rnorm(10),
treatment = rep(letters[1:5], 2))
df
?predict.lme
