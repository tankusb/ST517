results$data <- factor(sapply(strsplit(as.character(results$Param), ":"), "[[", i = 2), levels = c("Uncorrelated", "Correlated"))
qplot(Estimate, data = results) + facet_grid(data ~ beta, labeller = label_parsed) +  ylab("") +  theme(axis.ticks = element_blank(), axis.text.y = element_blank())
View(results)
View(sigma1)
View(sigma1)
View(X)
knitr::opts_chunk$set(echo = TRUE)
library(Amelia)
library(broom)
library(faraway)
library(ggplot2)
library(tidyverse)
head(dfNulls)
#head(dfNulls)
dfNullsSorted <- dfNulls[order(bmi),]
#head(dfNulls)
#dfNullsSorted <- dfNulls[order(bmi),]
n <- dim(dfNulls)[1]
knitr::opts_chunk$set(echo = TRUE)
library(Amelia)
library(broom)
library(faraway)
library(ggplot2)
library(tidyverse)
library(faraway)
?pima
df <- pima
#df[ == 0] <- NA
dfResponse <- df[, c('pregnant', 'diabetes', 'test')]
dfReplaceNulls <-  df[, c('diastolic', 'glucose', 'triceps', 'insulin',  'bmi')]
dfReplaceNulls[dfReplaceNulls == 0] <- NA
dfNulls <- cbind(dfReplaceNulls, dfResponse)
#head(dfReplaceNulls)
#head(dfResponse)
head(dfNulls)
# CREATE VISUAL
#dfNulls$diabetes <- rownames(dfNulls)
#png(filename = "Plot.png", width = 5000, height = 1000)
# By Diabetes
dfNulls_long <- gather(dfNulls, variable, value, -diabetes)
qplot(diabetes, variable, data = dfNulls_long, geom = "tile",
fill = is.na(value)) +
scale_fill_manual("missing?",
values = c(`TRUE` = "black", `FALSE` = "white")) +
theme(axis.text.x = element_text(angle = 0))
#head(dfNulls)
#dfNullsSorted <- dfNulls[order(bmi),]
n <- dim(dfNulls)[1]\
#head(dfNulls)
#dfNullsSorted <- dfNulls[order(bmi),]
n <- dim(dfNulls)[1]\
#head(dfNulls)
#dfNullsSorted <- dfNulls[order(bmi),]
n <- dim(dfNulls)[1]
image(is.na(dfNulls), axes = FALSE, col = gray(1:0))
axis(2, at = 0:7/7, labels = colnames(dfNulls))
axis(1, at = 0:(n-1)/(n-1), labels = row.names(dfNulls), las = 2)
knitr::opts_chunk$set(echo = TRUE)
library(Amelia)
library(broom)
library(faraway)
library(ggplot2)
library(Sleuth3)
library(tidyverse)
brainMiss <- case0902
n <- nrow(brainMiss)
brainMiss$Body[sample(1:n, 10, replace=FALSE)] <- NA
brainMiss$Litter[sample(1:n, 7, replace=FALSE)] <- NA
brainMiss$Gestation[sample(1:n, 15, replace=FALSE)] <- NA
brainMissQuant <- subset(brainMiss, select = -Species)
n.imp <- 50
ame.imp <- amelia(brainMissQuant, m=n.imp, p2s = 0, log =\ 2:4)
brainMiss <- case0902
n <- nrow(brainMiss)
brainMiss$Body[sample(1:n, 10, replace=FALSE)] <- NA
brainMiss$Litter[sample(1:n, 7, replace=FALSE)] <- NA
brainMiss$Gestation[sample(1:n, 15, replace=FALSE)] <- NA
brainMissQuant <- subset(brainMiss, select = -Species)
n.imp <- 50
ame.imp <- amelia(brainMissQuant, m=n.imp, p2s = 0, log = 2:4)
betas <- matrix(0, nrow=n.imp, ncol=4)
ses <- matrix(0, nrow=n.imp, ncol=4)
for(i in 1:n.imp){
newMod <- lm(log(Brain) ~ log(Body) + log(Gestation) + log(Litter), data=ame.imp$imputations[[i]])
betas[i,] <- coef(newMod)
14
ses[i,] <- coef(summary(newMod))[,2]
}
mi.meld(q = betas, se = ses)
mi.meld(q = betas, se = ses)
mi.meld(q = betas, se = ses)
origMod <- lm(log(Brain) ~ log(Gestation) + log(Litter) + log(Body), data=case0902)
summary(origMod)
library(faraway)
?pima
df <- pima
#df[ == 0] <- NA
dfResponse <- df[, c('pregnant', 'diabetes', 'test')]
dfReplaceNulls <-  df[, c('diastolic', 'glucose', 'triceps', 'insulin',  'bmi')]
dfReplaceNulls[dfReplaceNulls == 0] <- NA
dfNulls <- cbind(dfReplaceNulls, dfResponse)
#head(dfReplaceNulls)
#head(dfResponse)
head(dfNulls)
# CREATE VISUAL
#dfNulls$diabetes <- rownames(dfNulls)
# By Diabetes
dfNulls_long <- gather(dfNulls, variable, value, -diabetes)
qplot(diabetes, variable, data = dfNulls_long, geom = "tile",
fill = is.na(value)) +
scale_fill_manual("missing?",
values = c(`TRUE` = "black", `FALSE` = "white")) +
theme(axis.text.x = element_text(angle = 0))
library(faraway)
?pima
df <- pima
#df[ == 0] <- NA
dfResponse <- df[, c('pregnant', 'diabetes', 'test')]
dfReplaceNulls <-  df[, c('diastolic', 'glucose', 'triceps', 'insulin',  'bmi')]
dfReplaceNulls[dfReplaceNulls == 0] <- NA
dfNulls <- cbind(dfReplaceNulls, dfResponse)
head(dfNulls)
# By Diabetes
dfNulls_long <- gather(dfNulls, variable, value, -diabetes)
qplot(diabetes, variable, data = dfNulls_long, geom = "tile",
fill = is.na(value)) +
scale_fill_manual("missing?",
values = c(`TRUE` = "black", `FALSE` = "white")) +
theme(axis.text.x = element_text(angle = 0))
apply(colnames(dfNulls), count)
library(faraway)
?pima
df <- pima
#df[ == 0] <- NA
dfResponse <- df[, c('pregnant', 'diabetes', 'test')]
dfReplaceNulls <-  df[, c('diastolic', 'glucose', 'triceps', 'insulin',  'bmi')]
dfReplaceNulls[dfReplaceNulls == 0] <- NA
dfNulls <- cbind(dfReplaceNulls, dfResponse)
head(dfNulls)
# By Diabetes
dfNulls_long <- gather(dfNulls, variable, value, -diabetes)
qplot(diabetes, variable, data = dfNulls_long, geom = "tile",
fill = is.na(value)) +
scale_fill_manual("missing?",
values = c(`TRUE` = "black", `FALSE` = "white")) +
theme(axis.text.x = element_text(angle = 0))
apply(colnames(dfNulls), count())
library(faraway)
?pima
df <- pima
#df[ == 0] <- NA
dfResponse <- df[, c('pregnant', 'diabetes', 'test')]
dfReplaceNulls <-  df[, c('diastolic', 'glucose', 'triceps', 'insulin',  'bmi')]
dfReplaceNulls[dfReplaceNulls == 0] <- NA
dfNulls <- cbind(dfReplaceNulls, dfResponse)
head(dfNulls)
# By Diabetes
dfNulls_long <- gather(dfNulls, variable, value, -diabetes)
qplot(diabetes, variable, data = dfNulls_long, geom = "tile",
fill = is.na(value)) +
scale_fill_manual("missing?",
values = c(`TRUE` = "black", `FALSE` = "white")) +
theme(axis.text.x = element_text(angle = 0))
apply(colnames(dfNulls),2, count())
library(faraway)
?pima
df <- pima
#df[ == 0] <- NA
dfResponse <- df[, c('pregnant', 'diabetes', 'test')]
dfReplaceNulls <-  df[, c('diastolic', 'glucose', 'triceps', 'insulin',  'bmi')]
dfReplaceNulls[dfReplaceNulls == 0] <- NA
dfNulls <- cbind(dfReplaceNulls, dfResponse)
head(dfNulls)
# By Diabetes
dfNulls_long <- gather(dfNulls, variable, value, -diabetes)
qplot(diabetes, variable, data = dfNulls_long, geom = "tile",
fill = is.na(value)) +
scale_fill_manual("missing?",
values = c(`TRUE` = "black", `FALSE` = "white")) +
theme(axis.text.x = element_text(angle = 0))
apply(colnames(dfNulls),2, count(df))
library(faraway)
?pima
df <- pima
#df[ == 0] <- NA
dfResponse <- df[, c('pregnant', 'diabetes', 'test')]
dfReplaceNulls <-  df[, c('diastolic', 'glucose', 'triceps', 'insulin',  'bmi')]
dfReplaceNulls[dfReplaceNulls == 0] <- NA
dfNulls <- cbind(dfReplaceNulls, dfResponse)
head(dfNulls)
# By Diabetes
dfNulls_long <- gather(dfNulls, variable, value, -diabetes)
qplot(diabetes, variable, data = dfNulls_long, geom = "tile",
fill = is.na(value)) +
scale_fill_manual("missing?",
values = c(`TRUE` = "black", `FALSE` = "white")) +
theme(axis.text.x = element_text(angle = 0))
apply(colnames(dfNulls),2, count
library(faraway)
?pima
df <- pima
#df[ == 0] <- NA
dfResponse <- df[, c('pregnant', 'diabetes', 'test')]
dfReplaceNulls <-  df[, c('diastolic', 'glucose', 'triceps', 'insulin',  'bmi')]
dfReplaceNulls[dfReplaceNulls == 0] <- NA
dfNulls <- cbind(dfReplaceNulls, dfResponse)
head(dfNulls)
# By Diabetes
dfNulls_long <- gather(dfNulls, variable, value, -diabetes)
qplot(diabetes, variable, data = dfNulls_long, geom = "tile",
fill = is.na(value)) +
scale_fill_manual("missing?",
values = c(`TRUE` = "black", `FALSE` = "white")) +
theme(axis.text.x = element_text(angle = 0))
apply(colnames(dfNulls),2, count)
library(faraway)
?pima
df <- pima
#df[ == 0] <- NA
dfResponse <- df[, c('pregnant', 'diabetes', 'test')]
dfReplaceNulls <-  df[, c('diastolic', 'glucose', 'triceps', 'insulin',  'bmi')]
dfReplaceNulls[dfReplaceNulls == 0] <- NA
dfNulls <- cbind(dfReplaceNulls, dfResponse)
head(dfNulls)
# By Diabetes
dfNulls_long <- gather(dfNulls, variable, value, -diabetes)
qplot(diabetes, variable, data = dfNulls_long, geom = "tile",
fill = is.na(value)) +
scale_fill_manual("missing?",
values = c(`TRUE` = "black", `FALSE` = "white")) +
theme(axis.text.x = element_text(angle = 0))
apply(colnames(dfNulls), count)
library(faraway)
?pima
df <- pima
#df[ == 0] <- NA
dfResponse <- df[, c('pregnant', 'diabetes', 'test')]
dfReplaceNulls <-  df[, c('diastolic', 'glucose', 'triceps', 'insulin',  'bmi')]
dfReplaceNulls[dfReplaceNulls == 0] <- NA
dfNulls <- cbind(dfReplaceNulls, dfResponse)
head(dfNulls)
# By Diabetes
dfNulls_long <- gather(dfNulls, variable, value, -diabetes)
qplot(diabetes, variable, data = dfNulls_long, geom = "tile",
fill = is.na(value)) +
scale_fill_manual("missing?",
values = c(`TRUE` = "black", `FALSE` = "white")) +
theme(axis.text.x = element_text(angle = 0))
sum(is.na(dfNulls))
library(faraway)
?pima
df <- pima
#df[ == 0] <- NA
dfResponse <- df[, c('pregnant', 'diabetes', 'test')]
dfReplaceNulls <-  df[, c('diastolic', 'glucose', 'triceps', 'insulin',  'bmi')]
dfReplaceNulls[dfReplaceNulls == 0] <- NA
dfNulls <- cbind(dfReplaceNulls, dfResponse)
head(dfNulls)
# By Diabetes
dfNulls_long <- gather(dfNulls, variable, value, -diabetes)
qplot(diabetes, variable, data = dfNulls_long, geom = "tile",
fill = is.na(value)) +
scale_fill_manual("missing?",
values = c(`TRUE` = "black", `FALSE` = "white")) +
theme(axis.text.x = element_text(angle = 0))
sapply(dfNulls, function(x), sum(is.na(x))
library(faraway)
?pima
df <- pima
#df[ == 0] <- NA
dfResponse <- df[, c('pregnant', 'diabetes', 'test')]
dfReplaceNulls <-  df[, c('diastolic', 'glucose', 'triceps', 'insulin',  'bmi')]
dfReplaceNulls[dfReplaceNulls == 0] <- NA
dfNulls <- cbind(dfReplaceNulls, dfResponse)
head(dfNulls)
# By Diabetes
dfNulls_long <- gather(dfNulls, variable, value, -diabetes)
qplot(diabetes, variable, data = dfNulls_long, geom = "tile",
fill = is.na(value)) +
scale_fill_manual("missing?",
values = c(`TRUE` = "black", `FALSE` = "white")) +
theme(axis.text.x = element_text(angle = 0))
sapply(dfNulls, function(x) sum(is.na(x))
library(faraway)
?pima
df <- pima
#df[ == 0] <- NA
dfResponse <- df[, c('pregnant', 'diabetes', 'test')]
dfReplaceNulls <-  df[, c('diastolic', 'glucose', 'triceps', 'insulin',  'bmi')]
dfReplaceNulls[dfReplaceNulls == 0] <- NA
dfNulls <- cbind(dfReplaceNulls, dfResponse)
head(dfNulls)
# By Diabetes
dfNulls_long <- gather(dfNulls, variable, value, -diabetes)
qplot(diabetes, variable, data = dfNulls_long, geom = "tile",
fill = is.na(value)) +
scale_fill_manual("missing?",
values = c(`TRUE` = "black", `FALSE` = "white")) +
theme(axis.text.x = element_text(angle = 0))
sapply(dfNulls, function(x) sum(is.na(x)))
35+5+227+374+11
fit <- lm(diastolic ~ . , data = dfNulls)
fit <- lm(diastolic ~ . , data = dfNulls)
summary(fit)
fit <- lm(diastolic ~ . , data = dfNulls)
summary(fit)
#n.imp <- 25 # Set the number of imputed datasets
#chimp <- amelia(chmiss, m=n.imp, p2s=0)
dfMeanImputation <- dfNulls
dfMeanImputation[is.na(dfMeanImputation)] <- mean(dfNulls, na.rm = TRUE)
dfMeanImputation <- dfNulls
dfMeanImputation[is.na(dfMeanImputation)] <- mean(dfNulls, na.rm = TRUE)
dfMeanImputation <- dfNulls
dfMeanImputation[is.na(dfMeanImputation)] <- mean(dfNulls, na.rm = TRUE)
head(dfMeanImputation)
dfMeanImputation <- dfNulls
dfMeanImputation[is.na(dfMeanImputation)] <- mean(dfNulls, na.rm = TRUE)
head(dfMeanImputation)
mean(dfNulls,na.rm = TRUE)
dfMeanImputation <- dfNulls
dfMeanImputation[is.na(dfMeanImputation)] <- mean(dfNulls, na.rm = TRUE)
head(dfMeanImputation)
mean(dfMeanImputation, na.rm = TRUE)
dfMeanImputation <- dfNulls
dfMeanImputation[is.na(dfMeanImputation)] <- mean(dfNulls, na.rm = TRUE)
head(dfMeanImputation)
mean(dfMeanImputation, na.rm = FALSE)
library(Amelia)
library(broom)
library(faraway)
library(ggplot2)
library(tidyverse)
x_mean_imputed[is.na(x_mean_imputed)] <- mean(x_miss, na.rm = TRUE)
library(Amelia)
library(broom)
library(faraway)
library(ggplot2)
library(tidyverse)
x <- c(NA, 1, 3, 5, -99)
x + 1
x < 1
x == NA
is.na(x)
x[!is.na(x)]
x[x == -99] <- NA
x
sum(x)
mean(x)
sd(x)
mean(x, na.rm = TRUE)
df <- data.frame(x = x, y = rnorm(5), obs = 1:5)
fit <- lm(y ~ x, data = df)
summary(fit)
augment(fit, data = df)
dfMeanImputation <- dfNulls
dfMeanImputation[is.na(dfMeanImputation)] <- mean(dfNulls, na.rm = TRUE)
head(dfMeanImputation)
mean(dfMeanImputation, na.rm = TRUE)
dfNulls
dfMeanImputation <- dfNulls
dfMeanImputation[is.na(dfMeanImputation)] <- mean(dfNulls, na.rm = TRUE)
head(dfMeanImputation)
mean(dfMeanImputation, na.rm = TRUE)
mean(dfNulls,na.rm = TRUE)
mean(dfNulls,na.rm = TRUE)
dfMeanImputation <- dfNulls
dfMeanImputation[is.na(dfMeanImputation)] <- mean(dfNulls, na.rm = TRUE)
head(dfMeanImputation)
mean(dfMeanImputation, na.rm = TRUE)
mean(dfMeanImputation, na.rm = TRUE)
mean(dfMeanImputation)
mean(dfMeanImputation, na.rm = T)
mean(dfMeanImputation, na.rm = F)
x_miss[sample(n, size = 2)] <- NA
library(Amelia)
library(broom)
library(faraway)
library(ggplot2)
library(tidyverse)
x <- c(NA, 1, 3, 5, -99)
x + 1
x < 1
x == NA
is.na(x)
x[!is.na(x)]
x[x == -99] <- NA
x
sum(x)
mean(x)
sd(x)
mean(x, na.rm = TRUE)
df <- data.frame(x = x, y = rnorm(5), obs = 1:5)
fit <- lm(y ~ x, data = df)
summary(fit)
augment(fit, data = df)
mean(x_miss, na.rm = TRUE)
library(Amelia)
library(broom)
library(faraway)
library(ggplot2)
library(tidyverse)
x <- c(NA, 1, 3, 5, -99)
x + 1
x < 1
x == NA
is.na(x)
x[!is.na(x)]
x[x == -99] <- NA
x
sum(x)
mean(x)
sd(x)
mean(x, na.rm = TRUE)
df <- data.frame(x = x, y = rnorm(5), obs = 1:5)
fit <- lm(y ~ x, data = df)
summary(fit)
augment(fit, data = df)
x_miss[sample(n, size = 2)] <- NA
augment(fit, data = df)
n <- 10
x_miss <- rnorm(n)
x_miss[sample(n, size = 2)] <- NA
x_miss
mean(x_miss)
mean(x_miss, na.rm = TRUE)
x_mean_imputed <- x_miss
x_mean_imputed[is.na(x_mean_imputed)] <- mean(x_miss, na.rm = TRUE)
x_mean_imputed
mean(x_miss, na.rm = TRUE)
mean(x_mean_imputed)
colMeans(dfMeanImputation)
colMeans(dfMeanImputation, na.rm = T)
dfMeanImputation <- dfNulls
dfMeanImputation[is.na(dfMeanImputation)] <- colMeans(dfMeanImputation, na.rm = T)
dfMeanImputation <- dfNulls
dfMeans <- colMeans(dfMeanImputation, na.rm = T)
names <- colnames(dfMeanImputation)
for (e in names){
print(e)
}
#dfMeanImputation[is.na(dfMeanImputation['glucose'])] <- mean(dfMeans, na.rm = TRUE)
#head(dfMeanImputation)
#mean(dfMeanImputation, na.rm = TRUE)
dfMeanImputation <- dfNulls
dfMeans <- colMeans(dfMeanImputation, na.rm = T)
names <- colnames(dfMeanImputation)
i <- 1
for (e in names){
dfMeanImputation[is.na(dfMeanImputation[e])] <- mean(dfMeans[i], na.rm = TRUE)
i += 1
dfMeanImputation <- dfNulls
dfMeans <- colMeans(dfMeanImputation, na.rm = T)
names <- colnames(dfMeanImputation)
i <- 1
for (e in names){
dfMeanImputation[is.na(dfMeanImputation[e])] <- mean(dfMeans[i], na.rm = TRUE)
i <- i + 1
}
dfMeanImputation <- dfNulls
dfMeans <- colMeans(dfMeanImputation, na.rm = T)
names <- colnames(dfMeanImputation)
i <- 1
#for (e in names){
dfMeanImputation[is.na(dfMeanImputation['glucose'])] <- mean(dfMeans[1], na.rm = TRUE)
dfMeanImputation[is.na(dfMeanImputation['glucose'])] <- mean(dfMeans[1], na.rm = TRUE)
#mean(dfMeanImputation, na.rm = TRUE)
dfMeanImputation[is.na(dfMeanImputation['glucose'])]
View(dfMeanImputation)
#mean(dfMeanImputation, na.rm = TRUE)
is.na(dfMeanImputation['glucose'])
#mean(dfMeanImputation, na.rm = TRUE)
dfMeanImputation['glucose'][is.na(dfMeanImputation['glucose'])]
dfMeanImputation['glucose'][is.na(dfMeanImputation['glucose'])] <- mean(dfMeans[1], na.rm = TRUE)
View(dfMeanImputation)
dfMeanImputation <- dfNulls
dfMeans <- colMeans(dfMeanImputation, na.rm = T)
names <- colnames(dfMeanImputation)
i <- 1
for (e in names){
dfMeanImputation[e][is.na(dfMeanImputation[e])] <- mean(dfMeans[i], na.rm = TRUE)
i <- i + 1
}
#dfMeanImputation[is.na(dfMeanImputation['glucose'])] <- mean(dfMeans, na.rm = TRUE)
#head(dfMeanImputation)
#mean(dfMeanImputation, na.rm = TRUE)
View(dfMeanImputation)
#copy df
dfMeanImputation <- dfNulls
#get col means / names
dfMeans <- colMeans(dfMeanImputation, na.rm = T)
names <- colnames(dfMeanImputation)
# replace nulls with column means
i <- 1
for (e in names){
dfMeanImputation[e][is.na(dfMeanImputation[e])] <- mean(dfMeans[i], na.rm = TRUE)
i <- i + 1
}
# REFIT MODEL
fitMeanImputation <- lm(diastolic ~ . , data = dfMeanImputation)
summary(fitMeanImputation)
set.seed(123)
n.imp <- 25 # Set the number of imputed datasets
chimp <- amelia(dfNulls, m=n.imp, p2s=0)
betas <- matrix(0, nrow=n.imp, ncol=8)
ses <- matrix(0, nrow=n.imp, ncol=8)
for(i in 1:n.imp){
newMod <- lm(diastolic ~ . , data=chimp$imputations[[i]])
betas[i,] <- coef(newMod)
ses[i,] <- coef(summary(newMod))[,2]
}
mi.meld(q=betas, se=ses)
View(betas)
